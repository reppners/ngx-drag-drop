{
  "version": 3,
  "sources": ["projects/demo/src/app/list/list.component.ts", "projects/demo/src/app/list/list.component.html"],
  "sourcesContent": ["import { NgForOf, NgIf } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {\n  DndDraggableDirective,\n  DndDropEvent,\n  DndDropzoneDirective,\n  DndHandleDirective,\n  DndPlaceholderRefDirective,\n  DropEffect,\n  EffectAllowed,\n} from 'ngx-drag-drop';\n\ninterface DraggableItem {\n  content: string;\n  effectAllowed: EffectAllowed;\n  disable: boolean;\n  handle: boolean;\n}\n\ninterface DropzoneLayout {\n  container: string;\n  list: string;\n  dndHorizontal: boolean;\n}\n\n@Component({\n  selector: 'dnd-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n  standalone: true,\n  imports: [\n    MatListModule,\n    DndDropzoneDirective,\n    DndPlaceholderRefDirective,\n    NgForOf,\n    DndDraggableDirective,\n    NgIf,\n    DndHandleDirective,\n    MatIconModule,\n  ],\n})\nexport default class ListComponent {\n  draggableListLeft: DraggableItem[] = [\n    {\n      content: 'Left',\n      effectAllowed: 'move',\n      disable: false,\n      handle: false,\n    },\n    {\n      content: 'Lefter',\n      effectAllowed: 'move',\n      disable: false,\n      handle: false,\n    },\n    {\n      content: 'Leftest',\n      effectAllowed: 'copyMove',\n      disable: false,\n      handle: false,\n    },\n    {\n      content: 'Lefty',\n      effectAllowed: 'move',\n      disable: false,\n      handle: true,\n    },\n    {\n      content: 'Left',\n      effectAllowed: 'move',\n      disable: false,\n      handle: false,\n    },\n    {\n      content: 'Lefter',\n      effectAllowed: 'move',\n      disable: false,\n      handle: false,\n    },\n    {\n      content: 'Leftest',\n      effectAllowed: 'copyMove',\n      disable: false,\n      handle: false,\n    },\n    {\n      content: 'Lefty',\n      effectAllowed: 'move',\n      disable: false,\n      handle: true,\n    },\n    {\n      content: 'Left',\n      effectAllowed: 'move',\n      disable: false,\n      handle: false,\n    },\n    {\n      content: 'Lefter',\n      effectAllowed: 'move',\n      disable: false,\n      handle: false,\n    },\n    {\n      content: 'Leftest',\n      effectAllowed: 'copyMove',\n      disable: false,\n      handle: false,\n    },\n    {\n      content: 'Lefty',\n      effectAllowed: 'move',\n      disable: false,\n      handle: true,\n    },\n  ];\n\n  draggableListRight: DraggableItem[] = [\n    {\n      content: 'I was originally right',\n      effectAllowed: 'move',\n      disable: false,\n      handle: false,\n    },\n  ];\n  horizontalLayoutActive: boolean = false;\n  private currentDraggableEvent?: DragEvent;\n  private currentDragEffectMsg?: string;\n  private readonly verticalLayout: DropzoneLayout = {\n    container: 'row',\n    list: 'column',\n    dndHorizontal: false,\n  };\n  layout: DropzoneLayout = this.verticalLayout;\n  private readonly horizontalLayout: DropzoneLayout = {\n    container: 'row',\n    list: 'row wrap',\n    dndHorizontal: true,\n  };\n\n  constructor(private snackBarService: MatSnackBar) {}\n\n  setHorizontalLayout(horizontalLayoutActive: boolean) {\n    this.layout = horizontalLayoutActive\n      ? this.horizontalLayout\n      : this.verticalLayout;\n  }\n\n  onDragStart(event: DragEvent) {\n    this.currentDragEffectMsg = '';\n    this.currentDraggableEvent = event;\n\n    this.snackBarService.dismiss();\n    this.snackBarService.open('Drag started!', undefined, { duration: 2000 });\n  }\n\n  onDragged(item: any, list: any[], effect: DropEffect) {\n    this.currentDragEffectMsg = `Drag ended with effect \"${effect}\"!`;\n\n    if (effect === 'move') {\n      const index = list.indexOf(item);\n      list.splice(index, 1);\n    }\n  }\n\n  onDragEnd(event: DragEvent) {\n    this.currentDraggableEvent = event;\n    this.snackBarService.dismiss();\n    this.snackBarService.open(\n      this.currentDragEffectMsg || `Drag ended!`,\n      undefined,\n      { duration: 2000 }\n    );\n  }\n\n  onDrop(event: DndDropEvent, list?: any[]) {\n    if (list && (event.dropEffect === 'copy' || event.dropEffect === 'move')) {\n      let index = event.index;\n\n      if (typeof index === 'undefined') {\n        index = list.length;\n      }\n\n      list.splice(index, 0, event.data);\n    }\n  }\n}\n", "<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <pre>dndEffectAllowed=\"copyMove\"</pre>\n\n      <mat-list\n        [class.horizontal]=\"layout.dndHorizontal\"\n        [dndHorizontal]=\"layout.dndHorizontal\"\n        (dndDrop)=\"onDrop($event, draggableListLeft)\"\n        class=\"dndList gap-1 d-flex flex-column bg-light rounded-1 shadow-sm\"\n        dndDropzone\n        dndEffectAllowed=\"copyMove\">\n        <mat-list-item\n          class=\"dndPlaceholder border rounded-1 bg-opacity-25\"\n          dndPlaceholderRef>\n        </mat-list-item>\n\n        <mat-list-item\n          *ngFor=\"let item of draggableListLeft\"\n          [dndDisableIf]=\"item.disable\"\n          [dndDraggable]=\"item\"\n          [dndEffectAllowed]=\"item.effectAllowed\"\n          (dndCanceled)=\"onDragged(item, draggableListLeft, 'none')\"\n          (dndCopied)=\"onDragged(item, draggableListLeft, 'copy')\"\n          (dndEnd)=\"onDragEnd($event)\"\n          (dndLinked)=\"onDragged(item, draggableListLeft, 'link')\"\n          (dndMoved)=\"onDragged(item, draggableListLeft, 'move')\"\n          (dndStart)=\"onDragStart($event)\"\n          class=\"border rounded-1 bg-white\">\n          <div\n            *ngIf=\"item.handle\"\n            class=\"drag-handle align-self-center mx-3 my-0\"\n            dndHandle\n            matListItemIcon>\n            <mat-icon fontIcon=\"drag_handle\"></mat-icon>\n          </div>\n          <span matListItemTitle>{{ item.content }}</span>\n          <span matListItemLine>effectAllowed: {{ item.effectAllowed }}</span>\n        </mat-list-item>\n      </mat-list>\n    </div>\n\n    <div class=\"col d-flex flex-column\">\n      <pre>dndEffectAllowed=\"copyMove\"</pre>\n\n      <mat-list\n        [class.horizontal]=\"layout.dndHorizontal\"\n        [dndHorizontal]=\"layout.dndHorizontal\"\n        (dndDrop)=\"onDrop($event, draggableListRight)\"\n        class=\"dndList gap-1 flex-grow-1 d-flex flex-column bg-light rounded-1 shadow-sm\"\n        dndDropzone\n        dndEffectAllowed=\"copyMove\">\n        <mat-list-item\n          class=\"dndPlaceholder border rounded-1 bg-white bg-opacity-25\"\n          dndPlaceholderRef>\n        </mat-list-item>\n        <mat-list-item\n          *ngFor=\"let item of draggableListRight\"\n          [dndDisableIf]=\"item.disable\"\n          [dndDraggable]=\"item\"\n          [dndEffectAllowed]=\"item.effectAllowed\"\n          (dndCanceled)=\"onDragged(item, draggableListRight, 'none')\"\n          (dndCopied)=\"onDragged(item, draggableListRight, 'copy')\"\n          (dndEnd)=\"onDragEnd($event)\"\n          (dndLinked)=\"onDragged(item, draggableListRight, 'link')\"\n          (dndMoved)=\"onDragged(item, draggableListRight, 'move')\"\n          (dndStart)=\"onDragStart($event)\"\n          class=\"border rounded-1 bg-white\">\n          <div\n            *ngIf=\"item.handle\"\n            class=\"drag-handle align-self-center mx-3 my-0\"\n            dndHandle\n            matListItemIcon>\n            <mat-icon fontIcon=\"drag_handle\"></mat-icon>\n          </div>\n          <span matListItemTitle>{{ item.content }}</span>\n          <span matListItemLine>effectAllowed: {{ item.effectAllowed }}</span>\n        </mat-list-item>\n      </mat-list>\n    </div>\n\n    <div class=\"col d-flex flex-column\">\n      <pre>trash (dndEffectAllowed=\"move\")</pre>\n\n      <mat-list\n        [dndHorizontal]=\"layout.dndHorizontal\"\n        (dndDrop)=\"onDrop($event)\"\n        class=\"dndList gap-1 flex-grow-1 d-flex flex-column bg-light rounded-1 shadow-sm\"\n        dndDropzone\n        dndEffectAllowed=\"move\">\n      </mat-list>\n    </div>\n  </div>\n</div>\n\n<!-- TODO: @reppners I have no idea what the horizontal layout once was supposed to be. Sadly the existing demo has stopped working so I can't look it up -->\n<!-- <div class=\"layout-padding\"> -->\n<!--   <mat-slide-toggle [checked]=\"horizontalLayoutActive\" -->\n<!--                     (change)=\"horizontalLayoutActive = $event.checked; setHorizontalLayout($event.checked)\">horizontal -->\n<!--   </mat-slide-toggle> -->\n<!-- </div> -->\n"],
  "mappings": "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",
  "names": []
}
