{
  "version": 3,
  "sources": ["projects/demo/src/app/tree/tree.component.ts", "projects/demo/src/app/tree/tree.component.html"],
  "sourcesContent": ["import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport {\n  DndDraggableDirective,\n  DndDropEvent,\n  DndDropzoneDirective,\n  DndPlaceholderRefDirective,\n  DropEffect,\n} from 'ngx-drag-drop';\n\ninterface DraggableItem {\n  content: string;\n  children: DraggableItem[];\n}\n\n@Component({\n  selector: 'dnd-tree',\n  standalone: true,\n  imports: [\n    CommonModule,\n    DndDropzoneDirective,\n    DndPlaceholderRefDirective,\n    MatIconModule,\n    MatListModule,\n    DndDraggableDirective,\n  ],\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.scss'],\n})\nexport default class TreeComponent {\n  draggableList: DraggableItem[] = [\n    {\n      content: 'Demo 1',\n      children: [\n        {\n          content: 'Nested 1',\n          children: [],\n        },\n        {\n          content: 'Nested 2',\n          children: [],\n        },\n        {\n          content: 'Nested 3',\n          children: [],\n        },\n      ],\n    },\n    {\n      content: 'Demo 2',\n      children: [],\n    },\n    {\n      content: 'Demo 3',\n      children: [],\n    },\n    {\n      content: 'Demo 4',\n      children: [],\n    },\n    {\n      content: 'Demo 5',\n      children: [],\n    },\n    {\n      content: 'Demo 6',\n      children: [],\n    },\n    {\n      content: 'Demo 7',\n      children: [],\n    },\n    {\n      content: 'Demo 8',\n      children: [],\n    },\n    {\n      content: 'Demo 9',\n      children: [],\n    },\n    {\n      content: 'Demo 10',\n      children: [\n        {\n          content: 'Nested 1',\n          children: [],\n        },\n        {\n          content: 'Nested 2',\n          children: [],\n        },\n        {\n          content: 'Nested 3',\n          children: [],\n        },\n      ],\n    },\n  ];\n\n  onDragged(item: any, list: any[], effect: DropEffect) {\n    if (effect === 'move') {\n      const index = list.indexOf(item);\n      list.splice(index, 1);\n    }\n  }\n\n  onDrop(event: DndDropEvent, list?: any[]) {\n    console.log('onDrop', event, list);\n\n    if (list && (event.dropEffect === 'copy' || event.dropEffect === 'move')) {\n      let index = event.index;\n\n      if (typeof index === 'undefined') {\n        index = list.length;\n      }\n\n      list.splice(index, 0, event.data);\n    }\n  }\n}\n", "<div class=\"container-fluid\">\n\n  <ng-template #recursiveList let-list>\n    <mat-list-item\n      class=\"dndPlaceholder border bg-opacity-25 mb-1\"\n      dndPlaceholderRef />\n\n    <div *ngFor=\"let item of list\" class=\"\">\n      <mat-list-item\n        [dndDraggable]=\"item\"\n        dndEffectAllowed=\"move\"\n        (dndMoved)=\"onDragged(item, list, 'move')\"\n        class=\"border bg-white ms-n3\">\n        <span matListItemTitle>{{ item.content }}</span>\n      </mat-list-item>\n\n      <mat-list\n        *ngIf=\"item.children\"\n        (dndDrop)=\"onDrop($event, item.children)\"\n        class=\"d-flex flex-column bg-light pt-2 pb-0 ps-2\"\n        style=\"min-height: unset\"\n        dndDropzone\n        dndEffectAllowed=\"move\">\n\n        <ng-container *ngTemplateOutlet=\"recursiveList; context: { $implicit: item.children }\" />\n      </mat-list>\n    </div>\n  </ng-template>\n\n  <div class=\"row\">\n    <div class=\"col-12 offset-lg-2 col-lg-4\">\n      <mat-list\n        (dndDrop)=\"onDrop($event, draggableList)\"\n        class=\"d-flex flex-column bg-light gap-1\"\n        dndDropzone\n        dndEffectAllowed=\"move\">\n\n        <ng-container *ngTemplateOutlet=\"recursiveList; context: { $implicit: draggableList }\" />\n      </mat-list>\n    </div>\n    <div class=\"col-12 col-lg-4\">\n      <pre>{{draggableList | json}}</pre>\n    </div>\n  </div>\n</div>\n"],
  "mappings": "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",
  "names": []
}
