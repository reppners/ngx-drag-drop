{
  "version": 3,
  "sources": ["projects/demo/src/app/nested/nested.component.ts", "projects/demo/src/app/nested/nested.component.html"],
  "sourcesContent": ["import { NgForOf, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {\n  DndDraggableDirective,\n  DndDragImageRefDirective,\n  DndDropEvent,\n  DndDropzoneDirective,\n  DndHandleDirective,\n  DndPlaceholderRefDirective,\n  DropEffect,\n} from 'ngx-drag-drop';\n\ninterface NestableListItem {\n  content: string;\n  disable?: boolean;\n  handle?: boolean;\n  customDragImage?: boolean;\n  children?: NestableListItem[];\n}\n\n@Component({\n  selector: 'dnd-nested',\n  templateUrl: './nested.component.html',\n  styleUrls: ['./nested.component.scss'],\n  standalone: true,\n  imports: [\n    MatCardModule,\n    DndPlaceholderRefDirective,\n    NgForOf,\n    DndDraggableDirective,\n    NgIf,\n    MatIconModule,\n    DndHandleDirective,\n    DndDragImageRefDirective,\n    DndDropzoneDirective,\n    NgTemplateOutlet,\n  ],\n})\nexport default class NestedComponent {\n  nestableList: NestableListItem[] = [\n    {\n      content: 'Got something nested',\n      children: [\n        {\n          content: 'Nested',\n          customDragImage: true,\n          children: [],\n        },\n      ],\n    },\n    {\n      content: 'No nested dropping here',\n    },\n    {\n      content: 'Got more than one',\n      children: [\n        {\n          content: 'Nested 1',\n          handle: true,\n          children: [],\n        },\n        {\n          content: 'Nested 2',\n          children: [],\n        },\n        {\n          content: 'Nested 3',\n          children: [],\n        },\n      ],\n    },\n    {\n      content: \"Drop something, I'll catch!\",\n      children: [],\n    },\n  ];\n\n  private currentDraggableEvent?: DragEvent;\n  private currentDragEffectMsg?: string;\n\n  constructor(private snackBarService: MatSnackBar) {}\n\n  onDragStart(event: DragEvent) {\n    this.currentDragEffectMsg = '';\n    this.currentDraggableEvent = event;\n\n    this.snackBarService.dismiss();\n    this.snackBarService.open('Drag started!', undefined, { duration: 2000 });\n  }\n\n  onDragged(item: any, list: any[], effect: DropEffect) {\n    this.currentDragEffectMsg = `Drag ended with effect \"${effect}\"!`;\n\n    if (effect === 'move') {\n      const index = list.indexOf(item);\n      list.splice(index, 1);\n    }\n  }\n\n  onDragEnd(event: DragEvent) {\n    this.currentDraggableEvent = event;\n    this.snackBarService.dismiss();\n    this.snackBarService.open(\n      this.currentDragEffectMsg || `Drag ended!`,\n      undefined,\n      { duration: 2000 }\n    );\n  }\n\n  onDrop(event: DndDropEvent, list?: any[]) {\n    if (list && (event.dropEffect === 'copy' || event.dropEffect === 'move')) {\n      let index = event.index;\n\n      if (typeof index === 'undefined') {\n        index = list.length;\n      }\n\n      list.splice(index, 0, event.data);\n    }\n  }\n}\n", "<div class=\"container-fluid\">\n  <ng-template #recursiveList let-list>\n    <mat-card appearance=\"raised\" class=\"dndPlaceholder\" dndPlaceholderRef> </mat-card>\n\n    <mat-card\n      appearance=\"raised\"\n      *ngFor=\"let item of list\"\n      [dndDisableIf]=\"!!item.disable\"\n      [dndDraggable]=\"item\"\n      (dndCanceled)=\"onDragged(item, list, 'none')\"\n      (dndCopied)=\"onDragged(item, list, 'copy')\"\n      (dndEnd)=\"onDragEnd($event)\"\n      (dndLinked)=\"onDragged(item, list, 'link')\"\n      (dndMoved)=\"onDragged(item, list, 'move')\"\n      (dndStart)=\"onDragStart($event)\"\n      dndEffectAllowed=\"move\">\n      <mat-card-header class=\"p-2\">\n        <div *ngIf=\"item.handle\" class=\"drag-handle me-2 text-muted\">\n          <mat-icon dndHandle mat-list-icon>drag_handle </mat-icon>\n        </div>\n\n        {{ item.content }}\n      </mat-card-header>\n\n      <mat-card-content class=\"d-flex align-items-start gap-2 flex-column p-2\">\n        <div *ngIf=\"!!item.customDragImage\" dndDragImageRef>\n          MY_CUSTOM_DRAG_IMAGE\n        </div>\n\n        <div\n          *ngIf=\"item.children\"\n          (dndDrop)=\"onDrop($event, item.children)\"\n          class=\"flex-column p-2 gap-2 rounded-2\"\n          dndDropzone>\n          <ng-container\n            *ngTemplateOutlet=\"\n              recursiveList;\n              context: { $implicit: item.children }\n            \"></ng-container>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </ng-template>\n\n  <div\n    (dndDrop)=\"onDrop($event, nestableList)\"\n    class=\"d-flex gap-3 p-3 rounded-2\"\n    dndDropzone>\n    <ng-container\n      *ngTemplateOutlet=\"\n        recursiveList;\n        context: { $implicit: nestableList }\n      \"></ng-container>\n  </div>\n</div>\n"],
  "mappings": "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",
  "names": []
}
