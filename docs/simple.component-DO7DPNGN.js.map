{
  "version": 3,
  "sources": ["projects/demo/src/app/indirect-dnd-handle/indirect-dnd-handle.component.ts", "projects/demo/src/app/indirect-dnd-handle/indirect-dnd-handle.component.html", "projects/demo/src/app/indirect-drag-image/indirect-drag-image.component.ts", "projects/demo/src/app/indirect-drag-image/indirect-drag-image.component.html", "projects/demo/src/app/simple/simple.component.ts", "projects/demo/src/app/simple/simple.component.html"],
  "sourcesContent": ["import { Component, HostBinding } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DndHandleDirective } from 'ngx-drag-drop';\n\n@Component({\n  selector: 'dnd-indirect-handle',\n  templateUrl: './indirect-dnd-handle.component.html',\n  styleUrls: ['./indirect-dnd-handle.component.scss'],\n  standalone: true,\n  imports: [MatIconModule, DndHandleDirective],\n})\nexport class IndirectDndHandleComponent {\n  @HostBinding('class.drag-handle') get dragHandle() {\n    return true;\n  }\n}\n", "<mat-icon dndHandle fontIcon=\"drag_handle\"></mat-icon>\n\n", "import { Component } from '@angular/core';\nimport { DndDragImageRefDirective } from 'ngx-drag-drop';\n\n@Component({\n  selector: 'dnd-indirect-drag-image',\n  templateUrl: './indirect-drag-image.component.html',\n  styleUrls: ['./indirect-drag-image.component.scss'],\n  standalone: true,\n  imports: [DndDragImageRefDirective],\n})\nexport class IndirectDragImageComponent {}\n", "<div dndDragImageRef>\n  <ng-content></ng-content>\n</div>\n", "import { JsonPipe, NgForOf, NgIf } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {\n  DndDraggableDirective,\n  DndDragImageOffsetFunction,\n  DndDragImageRefDirective,\n  DndDropEvent,\n  DndDropzoneDirective,\n  DndHandleDirective,\n  EffectAllowed,\n} from 'ngx-drag-drop';\nimport { IndirectDndHandleComponent } from '../indirect-dnd-handle/indirect-dnd-handle.component';\nimport { IndirectDragImageComponent } from '../indirect-drag-image/indirect-drag-image.component';\n\ninterface DraggableItem {\n  content: string;\n  effectAllowed: EffectAllowed;\n  disable: boolean;\n  handle: boolean;\n}\n\n@Component({\n  selector: 'dnd-simple',\n  templateUrl: './simple.component.html',\n  styleUrls: ['./simple.component.scss'],\n  standalone: true,\n  imports: [\n    MatCardModule,\n    NgForOf,\n    DndDraggableDirective,\n    NgIf,\n    DndHandleDirective,\n    MatIconModule,\n    DndDragImageRefDirective,\n    IndirectDndHandleComponent,\n    IndirectDragImageComponent,\n    MatSlideToggleModule,\n    DndDropzoneDirective,\n    JsonPipe,\n  ],\n})\nexport default class SimpleComponent {\n  draggables: DraggableItem[] = [\n    {\n      content: 'testdata',\n      effectAllowed: 'copy',\n      disable: false,\n      handle: false,\n    },\n    {\n      content: 'testdata2',\n      effectAllowed: 'move',\n      disable: false,\n      handle: false,\n    },\n    {\n      content: 'testdata3',\n      effectAllowed: 'link',\n      disable: false,\n      handle: false,\n    },\n    {\n      content: 'testdata4',\n      effectAllowed: 'copy',\n      disable: true,\n      handle: false,\n    },\n    {\n      content: 'testdata5',\n      effectAllowed: 'copy',\n      disable: false,\n      handle: true,\n    },\n  ];\n\n  draggableWithDragImage: DraggableItem = {\n    content: 'testdata6',\n    effectAllowed: 'copy',\n    disable: false,\n    handle: true,\n  };\n\n  public dropzoneEnabled: boolean = true;\n  public lastDropEvent: DndDropEvent | null = null;\n\n  private currentDraggableEvent?: DragEvent;\n  private currentDragEffectMsg?: string;\n\n  constructor(private snackBarService: MatSnackBar) {}\n\n  dragImageOffsetRight: DndDragImageOffsetFunction = (\n    event: DragEvent,\n    dragImage: Element\n  ) => {\n    const dragImageComputedStyle = window.getComputedStyle(dragImage);\n    const paddingTop = parseFloat(dragImageComputedStyle.paddingTop) || 0;\n    const paddingLeft = parseFloat(dragImageComputedStyle.paddingLeft) || 0;\n    const borderTop = parseFloat(dragImageComputedStyle.borderTopWidth) || 0;\n    const borderLeft = parseFloat(dragImageComputedStyle.borderLeftWidth) || 0;\n\n    const x =\n      dragImage.clientWidth - (event.offsetX + paddingLeft + borderLeft);\n    return {\n      x: x,\n      y: event.offsetY + paddingTop + borderTop,\n    };\n  };\n\n  onDragStart(event: DragEvent) {\n    this.lastDropEvent = null;\n\n    this.currentDragEffectMsg = '';\n    this.currentDraggableEvent = event;\n\n    this.snackBarService.dismiss();\n    this.snackBarService.open('Drag started!', undefined, { duration: 2000 });\n  }\n\n  onDragged($event: DragEvent, effect: string) {\n    this.currentDragEffectMsg = `Drag ended with effect \"${effect}\"!`;\n  }\n\n  onDragEnd(event: DragEvent) {\n    this.currentDraggableEvent = event;\n    this.snackBarService.dismiss();\n    this.snackBarService.open(\n      this.currentDragEffectMsg || `Drag ended!`,\n      undefined,\n      { duration: 2000 }\n    );\n  }\n\n  onDrop(event: DndDropEvent) {\n    this.lastDropEvent = event;\n  }\n}\n", "<div class=\"container-fluid\">\n  <div class=\"row gap-3 gap-sm-0\">\n    <div class=\"d-flex flex-column col gap-2\">\n      <mat-card\n        appearance=\"raised\"\n        *ngFor=\"let draggable of draggables\"\n        [dndDisableIf]=\"draggable.disable\"\n        [dndDraggable]=\"draggable.content\"\n        [dndEffectAllowed]=\"draggable.effectAllowed\"\n        (dndCanceled)=\"onDragged($event, 'none')\"\n        (dndCopied)=\"onDragged($event, 'copy')\"\n        (dndEnd)=\"onDragEnd($event)\"\n        (dndLinked)=\"onDragged($event, 'link')\"\n        (dndMoved)=\"onDragged($event, 'move')\"\n        (dndStart)=\"onDragStart($event)\">\n        <mat-card-content class=\"d-flex flex-column gap-2\">\n          <div *ngIf=\"draggable.handle\" class=\"drag-handle\" dndHandle>\n            <mat-icon fontIcon=\"drag_handle\" mat-list-icon> </mat-icon>\n          </div>\n\n          draggable ({{ draggable.effectAllowed }})\n          <span [hidden]=\"!draggable.handle\"> only with handle</span>\n          <span [hidden]=\"!draggable.disable\"> DISABLED</span>\n        </mat-card-content>\n      </mat-card>\n\n      <mat-card\n        appearance=\"raised\"\n        [dndDisableIf]=\"draggableWithDragImage.disable\"\n        [dndDraggable]=\"draggableWithDragImage\"\n        [dndEffectAllowed]=\"draggableWithDragImage.effectAllowed\"\n        (dndCanceled)=\"onDragged($event, 'none')\"\n        (dndCopied)=\"onDragged($event, 'copy')\"\n        (dndEnd)=\"onDragEnd($event)\"\n        (dndLinked)=\"onDragged($event, 'link')\"\n        (dndMoved)=\"onDragged($event, 'move')\"\n        (dndStart)=\"onDragStart($event)\">\n        <mat-card-content class=\"d-flex flex-column gap-2\">\n          <div *ngIf=\"draggableWithDragImage.handle\" class=\"drag-handle\">\n            <mat-icon dndHandle fontIcon=\"drag_handle\" mat-list-icon>\n            </mat-icon>\n          </div>\n\n          draggable ({{ draggableWithDragImage.effectAllowed }})\n          <span [hidden]=\"!draggableWithDragImage.handle\">only with handle</span>\n          <span [hidden]=\"!draggableWithDragImage.disable\"> DISABLED</span>\n\n          <div dndDragImageRef>MY_CUSTOM_DRAG_IMAGE</div>\n        </mat-card-content>\n      </mat-card>\n\n      <mat-card\n        appearance=\"raised\"\n        [dndDisableIf]=\"draggableWithDragImage.disable\"\n        [dndDraggable]=\"draggableWithDragImage\"\n        [dndEffectAllowed]=\"draggableWithDragImage.effectAllowed\"\n        (dndCanceled)=\"onDragged($event, 'none')\"\n        (dndCopied)=\"onDragged($event, 'copy')\"\n        (dndEnd)=\"onDragEnd($event)\"\n        (dndLinked)=\"onDragged($event, 'link')\"\n        (dndMoved)=\"onDragged($event, 'move')\"\n        (dndStart)=\"onDragStart($event)\">\n        <mat-card-content class=\"d-flex flex-column gap-2\">\n          <dnd-indirect-handle></dnd-indirect-handle>\n\n          draggable ({{ draggableWithDragImage.effectAllowed }})\n\n          <dnd-indirect-drag-image>I'm the drag image but pssst</dnd-indirect-drag-image>\n        </mat-card-content>\n      </mat-card>\n\n      <mat-card\n        appearance=\"raised\"\n        [dndDisableIf]=\"draggableWithDragImage.disable\"\n        [dndDragImageOffsetFunction]=\"dragImageOffsetRight\"\n        [dndDraggable]=\"draggableWithDragImage\"\n        [dndEffectAllowed]=\"draggableWithDragImage.effectAllowed\"\n        (dndCanceled)=\"onDragged($event, 'none')\"\n        (dndCopied)=\"onDragged($event, 'copy')\"\n        (dndEnd)=\"onDragEnd($event)\"\n        (dndLinked)=\"onDragged($event, 'link')\"\n        (dndMoved)=\"onDragged($event, 'move')\"\n        (dndStart)=\"onDragStart($event)\">\n        <mat-card-content class=\"d-flex flex-column gap-2\">\n          <div>draggable ({{ draggableWithDragImage.effectAllowed }})</div>\n\n          <dnd-indirect-handle></dnd-indirect-handle>\n        </mat-card-content>\n      </mat-card>\n    </div>\n\n    <div class=\"col\">\n      <mat-card appearance=\"raised\">\n        <mat-card-header>\n          <mat-card-title>Dropzone</mat-card-title>\n          <mat-card-subtitle>\n            <mat-slide-toggle\n              [checked]=\"dropzoneEnabled\"\n              (change)=\"dropzoneEnabled = $event.checked\">\n              Enabled\n            </mat-slide-toggle>\n          </mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n          <section\n            [dndDisableIf]=\"!dropzoneEnabled\"\n            (dndDrop)=\"onDrop($event)\"\n            class=\"my-dropzone mt-3 p-2 border rounded\"\n            dndDragoverClass=\"custom-drag-over\"\n            dndDropzone>\n            <pre *ngIf=\"lastDropEvent\">{{ lastDropEvent | json }}</pre>\n          </section>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n"],
  "mappings": "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",
  "names": []
}
